# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attachment {
  encoding: String!
  id: String!
  mimetype: String!
  path: String!
  user: User!
  userId: String!
}

type CountTweetedTagOutput {
  count: Int!
  id: Int!
  name: String!
}

input CreateTagInput {
  name: String!
}

input CreateTweetInput {
  photoId: String
  tags: [String!]!
  text: String!
  userId: String!
}

type Cursor {
  afterCursor: String
  beforeCursor: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FileUploadInput {
  file: Upload!
  userId: String!
}

input GetTweetInput {
  afterCursor: String
  beforeCursor: String
  limit: Int!
  userId: String
}

type GetTweetOutput {
  cursor: Cursor!
  tweets: [Tweet!]!
}

input GetUserTweetInput {
  afterCursor: String
  beforeCursor: String
  limit: Int!
  userId: String!
}

input LoginInput {
  password: String!
  username: String!
}

type LoginOutput {
  accessToken: String!
  user: User!
}

type Mutation {
  createTag(createTagInput: CreateTagInput!): Tag!
  createTweet(createTweetInput: CreateTweetInput!): Tweet!
  createUser(newUserInput: NewUserInput!): User!
  deleteFile(attachmentId: String!): Boolean!
  login(loginInput: LoginInput!): LoginOutput!
  register(registerInput: RegisterInput!): String!
  updateCurrentUserAvatar(avatarId: String!): User!
  updateCurrentUserProfile(updateCurrentUserProfileInput: UpdateCurrentUserProfileInput!): User!
  uploadFile(fileUploadInput: FileUploadInput!): Attachment!
}

input NewUserInput {
  email: String!
  password: String!
  username: String!
}

type Profile {
  coverPhoto: Attachment
  coverPhotoId: String
  description: String!
  fullName: String!
  id: Int!
}

type Query {
  currentUser: User!
  getTopTweetedTagCount: [CountTweetedTagOutput!]!
  getTweet(getTweetInput: GetTweetInput!): GetTweetOutput!
  getUser(username: String!): User!
  getUserTweet(getUserTweetInput: GetUserTweetInput!): GetTweetOutput!
  tags: [Tag!]!
  user: [User!]!
}

type ReTweet {
  createdAt: DateTime!
  id: Int!
  tweet: Tweet!
  tweet_id: Int!
  updatedAt: DateTime!
  user: User!
  user_id: String!
}

input RegisterInput {
  confirmPassword: String!
  email: String!
  password: String!
  username: String!
}

type Tag {
  id: Int!
  name: String!
}

type Tweet {
  createdAt: DateTime!
  id: Int!
  photo: Attachment
  photoId: String
  private: Boolean!
  retweets: [ReTweet!]!
  tags: [Tag!]!
  text: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

input UpdateCurrentUserProfileInput {
  coverPhotoId: String
  description: String
  fullName: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  attachments: [Attachment!]!
  avatar: Attachment
  avatarId: String
  email: String!
  enabled: Boolean!
  id: String!
  profile: Profile!
  profileId: Int!
  tweets: [Tweet!]!
  username: String!
  verified: Boolean!
}